quarkus.container-image.registry=quay.io
quarkus.container-image.group=raffaelespazzoli
quarkus.container-image.name=backstage-kcp-sink
quarkus.container-image.tag=1.0

quarkus.kubernetes.secret-volumes.kcp-init.secret-name=kcp-init
quarkus.kubernetes.mounts.kcp-init.path=/kcp

#quarkus.kubernetes-client.ca-cert-file=${quarkus.kubernetes.mounts.kcp-init.path}/ca.crt
#quarkus.kubernetes-client.master-url=https://kcp.kcp.svc:6443
token-file-name=${quarkus.kubernetes.mounts.kcp-init.path}/token
ca-crt-file-name=/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
kcp-url=https://kcp.kcp.svc:6443




# mp.messaging.incoming.json_final_entities.bootstrap.servers=cdc-kafka-kafka-bootstrap.kcp.svc:9092
# mp.messaging.incoming.json_final_entities.connector=smallrye-kafka
# mp.messaging.incoming.json_final_entities.topic=backstage.public.final_entities
# mp.messaging.incoming.json_final_entities.auto.offset.reset=earliest
# mp.messaging.incoming.json_final_entities.value.deserializer=io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer


mp.messaging.incoming.string_final_entities.bootstrap.servers=cdc-kafka-kafka-bootstrap.kcp.svc:9092
mp.messaging.incoming.string_final_entities.connector=smallrye-kafka
mp.messaging.incoming.string_final_entities.topic=backstage.public.final_entities
mp.messaging.incoming.string_final_entities.auto.offset.reset=earliest
mp.messaging.incoming.string_final_entities.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer